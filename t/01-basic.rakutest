use Test;
use OneSeq;

plan 9;

my @a = ^5;
my @b = @a >>> @a;
is-deeply @b, [0,1,2,3,4,0,1,2,3,4], '>>> works';

my @c = @a <<< @a;
is-deeply @c, [4,3,2,1,0,4,3,2,1,0], '<<< works';

is-deeply [>>>],          ().Seq, '>>> used as meta-op without args';
is-deeply ([>>>] @a),     @a.Seq, '>>> used as meta-op with one args';
is-deeply ([>>>] @a, @a), @b.Seq, '>>> used as meta-op with two args';

is-deeply [<<<],          ().Seq, '>>> used as meta-op without args';
is-deeply ([<<<] @a), @a.reverse.Seq, '>>> used as meta-op with one args';
is-deeply ([<<<] @a, @a), @c.Seq, '>>> used as meta-op with two args';

class A {
    method iterator() {
        (1,2,3,4,5).iterator
    }
}

is-deeply A >>> A, (1,2,3,4,5,1,2,3,4,5).Seq, 'just needs an iterator';

# vim: expandtab shiftwidth=4
